{"version":3,"sources":["logo.svg","components/RegionsMap.js","components/RadialSeparators.js","components/CircleProgressBar.js","App.js","reportWebVitals.js","index.js"],"names":["MapChart","props","console","log","ChuyDist","TalasDist","NarynDist","OshDist","BatkenDist","IKDist","Object","keys","data","length","data-tip","projection","width","height","projectionConfig","center","scale","geography","geographies","map","geo","stroke","onMouseEnter","properties","ADM1_RU","Shape_Area","setTooltipContent","onClick","onDistrictClick","onMouseLeave","style","default","fill","district","outline","hover","pressed","rsmKey","coordinates","textAnchor","fontWeight","fontSize","memo","Separator","position","transform","turns","RadialSeparators","count","_","range","index","CircleProgressBar","value","percent","text","strokeWidth","styles","buildStyles","strokeLinecap","background","App","handleContentTooltip","content","handeOnDistrictClick","geoData","state","Tabletop","init","key","simpleSheet","then","setState","catch","err","warn","this","shortage","registered","necessary","Number","toFixed","className","Grid","container","justify","padding","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a907a8b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { memo } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  //\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n  \"https://raw.githubusercontent.com/Xakim1c/parliament-calculator-v2/main/src/data/kg_regions_topo.json\"\n\nconst getDistrictColor = (district) => {\n  if(district == 'г.Бишкек' || district == 'г.Ош'){\n    return '#1B4F72'\n  }else{\n    return '#5499C7'\n  }\n}\n\nconst handleMoveStart = (currentCenter) => {\n  console.log(\"New center: \", currentCenter)\n}\n\nconst handleMoveEnd = (newCenter) => {\n  console.log(\"New center: \", newCenter)\n}\n\nconst MapChart = (props) => {\n\n  console.log('MAP CHART')\n  console.log(props)\n  let Bishkek = 0\n  let Osh = 0\n  let ChuyDist = 0\n  let TalasDist = 0\n  let NarynDist = 0\n  let DjalalAbadDist = 0\n  let OshDist = 0\n  let BatkenDist = 0\n  let IKDist = 0\n\n  if(Object.keys(props.data).length !== 0 ){\n    Bishkek = props.data['Бишкек']\n    Osh = props.data['Ош']\n    ChuyDist = props.data['Чуйская']\n    TalasDist = props.data['Таласская']\n    NarynDist = props.data['Нарынская']\n    DjalalAbadDist = props.data['ДжалалАбадская']\n    OshDist = props.data['Ошская']\n    BatkenDist = props.data['Баткенская']\n    IKDist = props.data['ИКульская']\n  }\n  \n  return (\n    \n      <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\"  width={1000} height={500} projectionConfig={{center: [74.5,41.2],\n        scale: 6000}}>\n        {/* <ZoomableGroup center={[74.5,41.2]} minZoom={1} maxZoom={1}  zoom={1}>   */}\n        {/* onMoveStart={handleMoveStart} onMoveEnd={handleMoveEnd}> */}\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  stroke=\"#A9CCE3\"\n                  geography={geo}\n                  onMouseEnter={() => {\n                    console.log(geo)\n                    const { ADM1_RU, Shape_Area } = geo.properties;\n                    //setTooltipContent(`${ADM1_RU} — ${rounded(Shape_Area)}` + ': TEST');\n                    props.setTooltipContent(`${ADM1_RU}`);\n                  }}\n                  onClick={() => {\n                    props.onDistrictClick(geo.properties)\n                  }}\n                  onMouseLeave={() => {\n                    props.setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: getDistrictColor(geo.properties.ADM1_RU),\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#5DADE2\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#5499C7\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n\n          <Marker coordinates={[75.71,41.41]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n              {NarynDist} наб.\n            </text>\n          </Marker>\n\n          <Marker coordinates={[78.00,42.23]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n              {IKDist} наб.\n            </text>\n          </Marker>\n\n          <Marker coordinates={[74.5,42.55]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n              {ChuyDist} наб.\n            </text>\n          </Marker>\n\n          <Marker coordinates={[72.2, 42.35]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n              {TalasDist} наб.\n            </text>\n          </Marker>\n\n          <Marker coordinates={[72.3, 41.65]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n            {TalasDist} наб.\n            </text>\n          </Marker>\n\n          <Marker coordinates={[73.4, 40.25]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n              {OshDist} наб.\n            </text>\n          </Marker>\n\n          <Marker coordinates={[70.5, 39.65]} fill=\"#777\">\n            <text textAnchor=\"middle\" fill=\"#FFFFFF\" fontWeight='bold' fontSize='20'>\n              {BatkenDist} наб.\n            </text>\n          </Marker>\n\n        {/* </ZoomableGroup> */}\n      </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction Separator(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        transform: `rotate(${props.turns}turn)`\n      }}\n    >\n      <div style={props.style} />\n    </div>\n  );\n}\n\nfunction RadialSeparators(props) {\n  const turns = 1 / props.count;\n  return _.range(props.count).map(index => (\n    <Separator turns={index * turns} style={props.style} />\n  ));\n}\n\nexport default RadialSeparators;\n","import React from 'react';\n\n// Import react-circular-progressbar module and styles\nimport {\n  CircularProgressbar,\n  CircularProgressbarWithChildren,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Radial separators\nimport RadialSeparators from \"./RadialSeparators\";\n\nexport default function CircleProgressBar(props) {\n\n  return (\n    <CircularProgressbarWithChildren\n        value={props.percent}\n        text={`${props.percent}%`}\n        strokeWidth={10}\n        styles={buildStyles({\n          strokeLinecap: \"butt\"\n        })}\n      >\n        <RadialSeparators\n          count={12}\n          style={{\n            background: \"#fff\",\n            width: \"2px\",\n            // This needs to be equal to props.strokeWidth\n            height: `${10}%`\n          }}\n        />\n      </CircularProgressbarWithChildren>\n  );\n}\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nimport Map from './components/RegionsMap'\nimport CircleProgressBar from './components/CircleProgressBar'\n\nimport Tabletop from \"tabletop\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {data: {}};\n  }    \n\n  componentDidMount() {\n    Tabletop.init({\n      key: 'https://docs.google.com/spreadsheets/d/1mpsk4sFCmNi96xuSNT0FsazpAx15tgSM3hqEB4kvVQk/edit?usp=sharing',\n      simpleSheet: true\n    })\n      .then((data) => {\n        this.setState( {data: data[0]} )\n      })\n      .catch((err) => console.warn(err));\n  }\n\n  handleContentTooltip = (content) => {\n    // this.setState({content: content})\n    console.log(content)\n  }\n  \n  handeOnDistrictClick = (geoData) => {\n    console.log(geoData)\n    // let tooltipDataBase = this.resultsDataDisctrictsBase[geoData.ADM1_RU] \n    // let tooltipData = this.resultsDataDisctricts[geoData.ADM1_RU] \n  \n    // console.log('STATE handeOnDistrictClick')\n    // console.log(geoData.ADM1_RU)\n    \n    // this.setState({dataForChartDifference: {'district': matchDistrictShow(matchDistrict(geoData.ADM1_RU)), \n    //                                         'base': tooltipDataBase, \n    //                                         'diff': tooltipData}})\n  }\n\n\t\n  render () {\n\n    console.log('RENDER APP')\n    console.log(this.state.data)\n\n    let shortage = 0\n    let registered = 0\n    let necessary = 0 \n    let percent = 0\n    if(Object.keys(this.state.data).length !== 0 ){\n      registered = Number(this.state.data['Зарегистрировалось'])\n      necessary = Number(this.state.data['Всего необходимо'])\n      shortage = necessary - registered\n\n      percent = (registered/necessary*100).toFixed(0)\n    }\n    \n\n    return (\n      <div className=\"App\">        \n\n      <Grid container justify=\"center\">\n          <div style={{width: 1000, height: '100%'}}>\n              <h3>Для прозрачных выборов не хватает {shortage} наблюдателя!</h3> \n              <h4>(карта зарегистрированных наблюдателей по областям)</h4> \n              <Map \n                setTooltipContent={this.handleContentTooltip} \n                onDistrictClick={this.handeOnDistrictClick} \n                data = {this.state.data}\n              />        \n          </div>    \n\n          <div style={{width: 300, height: '100%', padding: '20px'}}>\n            <h3>Зарегистрировано {this.state.data['Зарегистрировалось']} из {this.state.data['Всего необходимо']} наблюдателей</h3> \n            <CircleProgressBar percent={percent}></CircleProgressBar>        \n          </div>                                 \n      </Grid>\n\t\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}